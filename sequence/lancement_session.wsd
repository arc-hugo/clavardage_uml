@startuml lancement_session
actor Employe
activate ControleurUtilisateurs
activate ServiceReceptionConnexionTCP
group seq [lancement local]
    Employe -> ControleurUtilisateurs : lancementSession(destinataire)
    ControleurUtilisateurs -> ModeleUtilisateurs : getEtat(destinataire)
    activate ModeleUtilisateurs
    ModeleUtilisateurs --> ControleurUtilisateurs : etat
    deactivate ModeleUtilisateurs
    alt etat = CONNECTE
        ControleurUtilisateurs -> AccesTCP : demandeConnexion(destinataire)
        activate AccesTCP
        AccesTCP -> TacheConnexionTCP : TacheConnexionTCP(tcp, destinataire)
        note over Employe
        destinataire : Utilisataire
        utilisateur : Utilisataire
        etat : EtatUtilisateur
        tcp : AccesTCP
        sock : Socket
        adr : InetAdress
        end note
        deactivate AccesTCP
        activate TacheConnexionTCP
        alt connexion acceptee
            TacheConnexionTCP -> AccesTCP : connexionAccepte(sock)
            activate AccesTCP
            AccesTCP -> ControleurUtilisateurs : lancementAccepte(sock)
            ControleurUtilisateurs -> ModeleUtilisateurs : getUtilisateurWithAdresse(adr)
            activate ModeleUtilisateurs
            ModeleUtilisateurs --> ControleurUtilisateurs : utilisateur
            deactivate ModeleUtilisateurs
            ref over ControleurUtilisateurs
                Création de
                    session
            end ref
            ControleurUtilisateurs --> AccesTCP
            AccesTCP --> TacheConnexionTCP
            deactivate AccesTCP
            deactivate TacheConnexionTCP
        else connexion refusee
            TacheConnexionTCP -[hidden]-> ControleurUtilisateurs
            activate TacheConnexionTCP
            TacheConnexionTCP -> AccesTCP : connexionRefuse(sock)
            activate AccesTCP
            AccesTCP -> ControleurUtilisateurs : lancementRefuse(adr)
            ControleurUtilisateurs -> ModeleUtilisateurs : getUtilisateurWithAdresse(adr)
            activate ModeleUtilisateurs
            ModeleUtilisateurs --> ControleurUtilisateurs : utilisateur
            deactivate ModeleUtilisateurs
            ControleurUtilisateurs -> ControleurUtilisateurs : messageConnexionRefuse(utilisateur)
            ControleurUtilisateurs --> AccesTCP
            AccesTCP --> TacheConnexionTCP
            deactivate AccesTCP
            deactivate TacheConnexionTCP
        end
    else actif = DECONNECTE
        ControleurUtilisateurs -> ControleurUtilisateurs : messageUtilisateurInactif(destinataire)
    end
end
group seq [lancement distante]
    ServiceReceptionConnexionTCP -> AccesTCP : receptionConnexion(sock)
    activate AccesTCP
    AccesTCP -> ControleurUtilisateurs : demandeSession(
    ControleurUtilisateurs -> ModeleUtilisateurs : getUtilisateurWithAdresse(adr)
    activate ModeleUtilisateurs
    ModeleUtilisateurs --> ControleurUtilisateurs : utilisateur
    deactivate ModeleUtilisateurs
    ControleurUtilisateurs -> ControleurUtilisateurs : accepterConnexion(utilisateur)
    Employe -> ControleurUtilisateurs : accepter
    note over Employe
    accepter : boolean
    ok : Ok
    fin : Fin
    end note
    alt accepter = true
        ref over ControleurUtilisateurs
            Création de
                session
        end ref
        ControleurUtilisateurs --> AccesTCP : accepte
        AccesTCP -> Ok : Ok(local)
        activate Ok
        Ok --> AccesTCP : ok
        deactivate Ok
        AccesTCP -> Ok : envoi(sock)
        activate Ok
        deactivate Ok
    else
        ControleurUtilisateurs --> AccesTCP : accepte
        AccesTCP -> Fin : Fin(local)
        activate Fin
        Fin --> AccesTCP : Fin
        deactivate Fin
        AccesTCP -> Fin : envoi(sock)
        activate Fin
        deactivate Fin
    end
    deactivate AccesTCP
end
@enduml
