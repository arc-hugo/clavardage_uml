@startuml controleurs
interface Initializable {
}
package Controleurs {
   class ControleurPseudo [[java:gei.barralberry.clavardage.controleurs.ControleurPseudo]] {
	 -pseudo: TextField
	 -validate_button: Button
	 -buttonbar: ButtonBar
	 -pref: Preferences
	 -txt: String
	 -x: int
	 -y: int
	 -{static} actif: boolean
	 +ControleurPseudo()
	 +getTxt(): String
	 +{static} estActif(): boolean
	 -new_pseudo(): void
	 -ferme(): void
	 -diminue(): void
	 -change(): void
	 -dragged(event: MouseEvent): void
	 -pressed(event: MouseEvent): void
	 +initialize(location: URL, resources: ResourceBundle): void
   }
   class ControleurSession [[java:gei.barralberry.clavardage.controleurs.ControleurSession]] {
         -{static} CSS_ENVOI: String
	 -{static} CSS_RECEPTION: String
	 -{static} CSS_ERREUR: String
	 -envoyer: Button
	 -fichier: Button
	 -texte: TextField
	 -messages: VBox
	 -scroll: ScrollPane
	 -dossierSession: File
	 +ControleurSession(local: Utilisateur, destinataire: Utilisateur)
	 +ControleurSession(local: Utilisateur, destinataire: Utilisateur, sock: Socket)
	 +initialize(location: URL, resources: ResourceBundle): void
	 -envoiTexte(): void
	 -envoiFichier(fichier: File): void
	 -fermeture(): void
	 -envoiMessage(msg: MessageAffiche): void
	 +fermetureLocale(): void
	 +confirmerFermeture(): void
	 +fermetureDistante(): void
	 +receptionMessage(msg: MessageAffiche): void
	 +getIdentifiantLocal(): UUID
	 +getDossierSession(): File
	 +envoiRecu(): void
	 +erreurEnvoi(): void
   }
   class ControleurUtilisateurs [[java:gei.barralberry.clavardage.controleurs.ControleurUtilisateurs]] {
	 -tabs: TabPane
	 -deconnexion: MenuItem
	 -changerPseudo: MenuItem
	 -buttonbar: ButtonBar
	 -name: MenuButton
	 -vb: VBox
	 -pane: BorderPane
	 -x: int
	 -y: int
	 +ControleurUtilisateurs()
	 +getIdentifiantLocal(): UUID
	 +getPseudoLocal(): String
	 +saisiePseudo(): void
	 -creationSession(util: Utilisateur, sock: Socket): void
	 -afficherHistorique(util: Utilisateur): void
	 +lancementSession(destinataire: Utilisateur): void
	 +lancementAccepte(sock: Socket): boolean
	 +lancementRefuse(adresse: InetAddress): void
	 +deconnexion(): void
	 +demandeSession(sock: Socket): boolean
	 +receptionUtilisateur(identifiant: UUID, adresse: InetAddress, pseudo: String): void
	 +deconnexionDistante(identifiant: UUID): void
	 +validationDistante(uuid: UUID, pseudo: String): boolean
	 -chercherSession(identifiant: UUID): Tab
	 -ferme(): void
	 -diminue(): void
	 -change(): void
	 -dragged1(event: MouseEvent): void
	 -pressed1(event: MouseEvent): void
	 +initialize(location: URL, resources: ResourceBundle): void
   }
}
ControleurUtilisateurs ..|> Initializable
ControleurSession ..|> Initializable
ControleurPseudo ..|> Initializable
ControleurUtilisateurs --> "ListView<Utilisateur>" Utilisateur : list
ControleurUtilisateurs --> "1" ModeleUtilisateurs : modele
ControleurUtilisateurs --> "1" AccesUDP : udp
ControleurUtilisateurs --> "1" AccesTCP : tcp
ControleurSession --> "1" ModeleSession : modele
ControleurSession --> "1" ServiceReceptionTCP : reception
ControleurSession --> "1" ExecuteurSession : executeur
ControleurSession --> "1" Utilisateur : getDestinataire()
@enduml
